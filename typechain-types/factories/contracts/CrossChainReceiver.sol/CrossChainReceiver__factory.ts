/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CrossChainReceiver,
  CrossChainReceiverInterface,
} from "../../../contracts/CrossChainReceiver.sol/CrossChainReceiver";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "ccipRouterAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "cometAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "swapTestnetUsdcAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "EnumerableMapNonexistentKey",
    type: "error",
  },
  {
    inputs: [],
    name: "ErrorCase",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "InvalidRouter",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
    ],
    name: "MessageNotFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlySelf",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderNotAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "sourceChainSelector",
        type: "uint64",
      },
    ],
    name: "SourceChainNotAllowed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "reason",
        type: "bytes",
      },
    ],
    name: "MessageFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
    ],
    name: "MessageRecovered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_allowed",
        type: "bool",
      },
    ],
    name: "allowlistSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_sourceChainSelector",
        type: "uint64",
      },
      {
        internalType: "bool",
        name: "_allowed",
        type: "bool",
      },
    ],
    name: "allowlistSourceChain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "allowlistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "isAllowlisted",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainSelecotor",
        type: "uint64",
      },
    ],
    name: "allowlistedSourceChains",
    outputs: [
      {
        internalType: "bool",
        name: "isAllowlisted",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "any2EvmMessage",
        type: "tuple",
      },
    ],
    name: "ccipReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getFailedMessagesIds",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "ids",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "any2EvmMessage",
        type: "tuple",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "tokenReceiver",
        type: "address",
      },
    ],
    name: "retryFailedMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
    ],
    name: "s_messageContents",
    outputs: [
      {
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "sourceChainSelector",
        type: "uint64",
      },
      {
        internalType: "bytes",
        name: "sender",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "simRevert",
        type: "bool",
      },
    ],
    name: "setSimRevert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e06040526001805460ff60a01b191690553480156200001d575f80fd5b50604051620021d8380380620021d88339810160408190526200004091620001e5565b33805f856001600160a01b03811662000073576040516335fdcccd60e21b81525f60048201526024015b60405180910390fd5b6001600160a01b039081166080528216620000d15760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060448201526064016200006a565b5f80546001600160a01b0319166001600160a01b0384811691909117909155811615620001035762000103816200011f565b5050506001600160a01b0391821660a0521660c052506200022c565b336001600160a01b03821603620001795760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016200006a565b600180546001600160a01b0319166001600160a01b038381169182179092555f8054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b80516001600160a01b0381168114620001e0575f80fd5b919050565b5f805f60608486031215620001f8575f80fd5b6200020384620001c9565b92506200021360208501620001c9565b91506200022360408501620001c9565b90509250925092565b60805160a05160c051611f65620002735f395f8181610dca01528181610e860152610f4b01525f8181610fb7015261107201525f81816101de01526107750152611f655ff3fe608060405234801561000f575f80fd5b50600436106100f0575f3560e01c806385572ffb11610093578063d0d1fc3d11610063578063d0d1fc3d14610215578063db04fa4914610238578063eab5b02c1461024b578063f2fde38b1461025e575f80fd5b806385572ffb146101a55780638da5cb5b146101b8578063b0f479a1146101dc578063cf6730f814610202575f80fd5b806352f813c3116100ce57806352f813c3146101535780636159ada11461016657806368f9a9cc1461018857806379ba50971461019d575f80fd5b806301ffc9a7146100f4578063369f7f661461011c5780634030d52114610131575b5f80fd5b6101076101023660046114d5565b610271565b60405190151581526020015b60405180910390f35b61012f61012a366004611528565b610309565b005b61010761013f36600461157b565b60056020525f908152604090205460ff1681565b61012f6101613660046115a3565b6105c6565b6101076101743660046115be565b60066020525f908152604090205460ff1681565b610190610607565b60405161011391906115d9565b61012f6106ad565b61012f6101b336600461161c565b61076a565b5f546001600160a01b03165b6040516001600160a01b039091168152602001610113565b7f00000000000000000000000000000000000000000000000000000000000000006101c4565b61012f61021036600461161c565b610983565b610228610223366004611653565b610ac3565b60405161011394939291906116b7565b61012f6102463660046116fc565b610c02565b61012f610259366004611728565b610c35565b61012f61026c3660046115be565b610c67565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082167f85572ffb00000000000000000000000000000000000000000000000000000000148061030357507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b610311610c7b565b600161031e600284610cd6565b1461035d576040517fb6e78260000000000000000000000000000000000000000000000000000000008152600481018390526024015b60405180910390fd5b61036c825f5b60029190610ce8565b505f828152600760209081526040808320815160a08101835281548152600182015467ffffffffffffffff169381019390935260028101805491928401916103b390611744565b80601f01602080910402602001604051908101604052809291908181526020018280546103df90611744565b801561042a5780601f106104015761010080835404028352916020019161042a565b820191905f5260205f20905b81548152906001019060200180831161040d57829003601f168201915b5050505050815260200160038201805461044390611744565b80601f016020809104026020016040519081016040528092919081815260200182805461046f90611744565b80156104ba5780601f10610491576101008083540402835291602001916104ba565b820191905f5260205f20905b81548152906001019060200180831161049d57829003601f168201915b5050505050815260200160048201805480602002602001604051908101604052809291908181526020015f905b8282101561052e575f848152602090819020604080518082019091526002850290910180546001600160a01b031682526001908101548284015290835290920191016104e7565b505050508152505090506105978282608001515f815181106105525761055261177c565b60200260200101516020015183608001515f815181106105745761057461177c565b60200260200101515f01516001600160a01b0316610cfc9092919063ffffffff16565b60405183907fef3bf8c64bc480286c4f3503b870ceb23e648d2d902e31fb7bb46680da6de8ad905f90a2505050565b6105ce610c7b565b60018054911515600160a01b027fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff909216919091179055565b60605f6106146002610d7c565b90505f8167ffffffffffffffff81111561063057610630611790565b604051908082528060200260200182016040528015610659578160200160208202803683370190505b5090505f5b828110156106a6575f610672600283610d86565b509050808383815181106106885761068861177c565b6020908102919091010152508061069e816117b8565b91505061065e565b5092915050565b6001546001600160a01b031633146107075760405162461bcd60e51b815260206004820152601660248201527f4d7573742062652070726f706f736564206f776e6572000000000000000000006044820152606401610354565b5f80543373ffffffffffffffffffffffffffffffffffffffff19808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107ce576040517fd7f73334000000000000000000000000000000000000000000000000000000008152336004820152602401610354565b6107de604082016020830161157b565b6107eb60408301836117d0565b8101906107f891906115be565b67ffffffffffffffff82165f9081526005602052604090205460ff1661083d5760405163042784cf60e31b815267ffffffffffffffff83166004820152602401610354565b6001600160a01b0381165f9081526006602052604090205460ff16610880576040516368692cbb60e11b81526001600160a01b0382166004820152602401610354565b6040517fcf6730f8000000000000000000000000000000000000000000000000000000008152309063cf6730f8906108bc9086906004016118ce565b5f604051808303815f87803b1580156108d3575f80fd5b505af19250505080156108e4575060015b61097e573d808015610911576040519150601f19603f3d011682016040523d82523d5f602084013e610916565b606091505b5061092384356001610363565b5083355f908152600760205260409020849061093f8282611bb8565b50506040518435907f55bc02a9ef6f146737edeeb425738006f67f077e7138de3bf84a15bde1a5b56f90610974908490611c80565b60405180910390a2505b505050565b3330146109bc576040517f14d4a4e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109cc604082016020830161157b565b6109d960408301836117d0565b8101906109e691906115be565b67ffffffffffffffff82165f9081526005602052604090205460ff16610a2b5760405163042784cf60e31b815267ffffffffffffffff83166004820152602401610354565b6001600160a01b0381165f9081526006602052604090205460ff16610a6e576040516368692cbb60e11b81526001600160a01b0382166004820152602401610354565b600154600160a01b900460ff1615610ab2576040517f79f79e0b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61097e610abe84611e24565b610da3565b60076020525f9081526040902080546001820154600283018054929367ffffffffffffffff90921692610af590611744565b80601f0160208091040260200160405190810160405280929190818152602001828054610b2190611744565b8015610b6c5780601f10610b4357610100808354040283529160200191610b6c565b820191905f5260205f20905b815481529060010190602001808311610b4f57829003601f168201915b505050505090806003018054610b8190611744565b80601f0160208091040260200160405190810160405280929190818152602001828054610bad90611744565b8015610bf85780601f10610bcf57610100808354040283529160200191610bf8565b820191905f5260205f20905b815481529060010190602001808311610bdb57829003601f168201915b5050505050905084565b610c0a610c7b565b67ffffffffffffffff919091165f908152600560205260409020805460ff1916911515919091179055565b610c3d610c7b565b6001600160a01b03919091165f908152600660205260409020805460ff1916911515919091179055565b610c6f610c7b565b610c78816110cf565b50565b5f546001600160a01b03163314610cd45760405162461bcd60e51b815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e6572000000000000000000006044820152606401610354565b565b5f610ce18383611184565b9392505050565b5f610cf48484846111e3565b949350505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905261097e9084906111ff565b5f61030382611279565b5f808080610d948686611283565b909450925050505b9250929050565b5f81608001515f81518110610dba57610dba61177c565b60200260200101515f015190505f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d3c7c2c76040518163ffffffff1660e01b81526004016040805180830381865afa158015610e23573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e479190611ecc565b9150505f83608001515f81518110610e6157610e6161177c565b602090810291909101810151015160405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390529192509084169063095ea7b3906044016020604051808303815f875af1158015610edf573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f039190611ef9565b506040517fdf791e500000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301528381166024830152604482018390527f0000000000000000000000000000000000000000000000000000000000000000169063df791e50906064015f604051808303815f87803b158015610f8c575f80fd5b505af1158015610f9e573d5f803e3d5ffd5b505060405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018590528516925063095ea7b391506044016020604051808303815f875af115801561100e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110329190611ef9565b506040517ff2b9fdb80000000000000000000000000000000000000000000000000000000081526001600160a01b038381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063f2b9fdb8906044015f604051808303815f87803b1580156110b3575f80fd5b505af11580156110c5573d5f803e3d5ffd5b5050505050505050565b336001600160a01b038216036111275760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606401610354565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038381169182179092555f8054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b5f818152600283016020526040812054801580156111a957506111a784846112ac565b155b15610ce1576040517f02b5668600000000000000000000000000000000000000000000000000000000815260048101849052602401610354565b5f8281526002840160205260408120829055610cf484846112b7565b5f6112136001600160a01b038416836112c2565b905080515f141580156112375750808060200190518101906112359190611ef9565b155b1561097e576040517f5274afe70000000000000000000000000000000000000000000000000000000081526001600160a01b0384166004820152602401610354565b5f610303826112cf565b5f808061129085856112d8565b5f81815260029690960160205260409095205494959350505050565b5f610ce183836112e3565b5f610ce183836112fa565b6060610ce183835f611346565b5f610303825490565b5f610ce183836113f8565b5f8181526001830160205260408120541515610ce1565b5f81815260018301602052604081205461133f57508154600181810184555f848152602080822090930184905584548482528286019093526040902091909155610303565b505f610303565b606081471015611384576040517fcd786059000000000000000000000000000000000000000000000000000000008152306004820152602401610354565b5f80856001600160a01b0316848660405161139f9190611f14565b5f6040518083038185875af1925050503d805f81146113d9576040519150601f19603f3d011682016040523d82523d5f602084013e6113de565b606091505b50915091506113ee86838361141e565b9695505050505050565b5f825f01828154811061140d5761140d61177c565b905f5260205f200154905092915050565b6060826114335761142e82611493565b610ce1565b815115801561144a57506001600160a01b0384163b155b1561148c576040517f9996b3150000000000000000000000000000000000000000000000000000000081526001600160a01b0385166004820152602401610354565b5080610ce1565b8051156114a35780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f602082840312156114e5575f80fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114610ce1575f80fd5b6001600160a01b0381168114610c78575f80fd5b5f8060408385031215611539575f80fd5b82359150602083013561154b81611514565b809150509250929050565b67ffffffffffffffff81168114610c78575f80fd5b803561157681611556565b919050565b5f6020828403121561158b575f80fd5b8135610ce181611556565b8015158114610c78575f80fd5b5f602082840312156115b3575f80fd5b8135610ce181611596565b5f602082840312156115ce575f80fd5b8135610ce181611514565b602080825282518282018190525f9190848201906040850190845b81811015611610578351835292840192918401916001016115f4565b50909695505050505050565b5f6020828403121561162c575f80fd5b813567ffffffffffffffff811115611642575f80fd5b820160a08185031215610ce1575f80fd5b5f60208284031215611663575f80fd5b5035919050565b5f5b8381101561168457818101518382015260200161166c565b50505f910152565b5f81518084526116a381602086016020860161166a565b601f01601f19169290920160200192915050565b84815267ffffffffffffffff84166020820152608060408201525f6116df608083018561168c565b82810360608401526116f1818561168c565b979650505050505050565b5f806040838503121561170d575f80fd5b823561171881611556565b9150602083013561154b81611596565b5f8060408385031215611739575f80fd5b823561171881611514565b600181811c9082168061175857607f821691505b60208210810361177657634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52604160045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b5f600182016117c9576117c96117a4565b5060010190565b5f808335601e198436030181126117e5575f80fd5b83018035915067ffffffffffffffff8211156117ff575f80fd5b602001915036819003821315610d9c575f80fd5b5f808335601e19843603018112611828575f80fd5b830160208101925035905067ffffffffffffffff811115611847575f80fd5b803603821315610d9c575f80fd5b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b8183525f60208085019450825f5b858110156118c357813561189e81611514565b6001600160a01b0316875281830135838801526040968701969091019060010161188b565b509495945050505050565b60208152813560208201525f60208301356118e881611556565b67ffffffffffffffff80821660408501526119066040860186611813565b925060a0606086015261191d60c086018483611855565b92505061192d6060860186611813565b601f1980878603016080880152611945858385611855565b945060808801359250601e1988360301831261195f575f80fd5b60209288019283019235915083821115611977575f80fd5b8160061b3603831315611988575f80fd5b8685030160a08701526116f184828461187d565b601f82111561097e575f81815260208120601f850160051c810160208610156119c25750805b601f850160051c820191505b818110156119e1578281556001016119ce565b505050505050565b67ffffffffffffffff831115611a0157611a01611790565b611a1583611a0f8354611744565b8361199c565b5f601f841160018114611a46575f8515611a2f5750838201355b5f19600387901b1c1916600186901b178355611a9e565b5f83815260209020601f19861690835b82811015611a765786850135825560209485019460019092019101611a56565b5086821015611a92575f1960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b8135611ab081611514565b6001600160a01b03811673ffffffffffffffffffffffffffffffffffffffff1983541617825550602082013560018201555050565b68010000000000000000831115611afe57611afe611790565b805483825580841015611b845760017f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8083168314611b3f57611b3f6117a4565b8086168614611b5057611b506117a4565b505f8381526020812086831b81019084841b015b80821015611b7f578282558284830155600282019150611b64565b505050505b505f8181526020812083915b858110156119e157611ba28383611aa5565b6040929092019160029190910190600101611b90565b81358155600181016020830135611bce81611556565b67ffffffffffffffff80821667ffffffffffffffff19845416178355611bf760408601866117d0565b93509150611c098383600287016119e9565b611c1660608601866117d0565b93509150611c288383600387016119e9565b60808501359250601e19853603018312611c40575f80fd5b918401918235915080821115611c54575f80fd5b506020820191508060061b3603821315611c6c575f80fd5b611c7a818360048601611ae5565b50505050565b602081525f610ce1602083018461168c565b6040805190810167ffffffffffffffff81118282101715611cb557611cb5611790565b60405290565b60405160a0810167ffffffffffffffff81118282101715611cb557611cb5611790565b604051601f8201601f1916810167ffffffffffffffff81118282101715611d0757611d07611790565b604052919050565b5f82601f830112611d1e575f80fd5b813567ffffffffffffffff811115611d3857611d38611790565b611d4b601f8201601f1916602001611cde565b818152846020838601011115611d5f575f80fd5b816020850160208301375f918101602001919091529392505050565b5f82601f830112611d8a575f80fd5b8135602067ffffffffffffffff821115611da657611da6611790565b611db4818360051b01611cde565b82815260069290921b84018101918181019086841115611dd2575f80fd5b8286015b84811015611e195760408189031215611dee575f8081fd5b611df6611c92565b8135611e0181611514565b81528185013585820152835291830191604001611dd6565b509695505050505050565b5f60a08236031215611e34575f80fd5b611e3c611cbb565b82358152611e4c6020840161156b565b6020820152604083013567ffffffffffffffff80821115611e6b575f80fd5b611e7736838701611d0f565b60408401526060850135915080821115611e8f575f80fd5b611e9b36838701611d0f565b60608401526080850135915080821115611eb3575f80fd5b50611ec036828601611d7b565b60808301525092915050565b5f8060408385031215611edd575f80fd5b8251611ee881611514565b602084015190925061154b81611514565b5f60208284031215611f09575f80fd5b8151610ce181611596565b5f8251611f2581846020870161166a565b919091019291505056fea2646970667358221220176f47ff36064593a02a1faf9eefc4a73b81468b3baa8d7dcebcdcc6afa89e1764736f6c63430008140033";

type CrossChainReceiverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CrossChainReceiverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CrossChainReceiver__factory extends ContractFactory {
  constructor(...args: CrossChainReceiverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    ccipRouterAddress: PromiseOrValue<string>,
    cometAddress: PromiseOrValue<string>,
    swapTestnetUsdcAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CrossChainReceiver> {
    return super.deploy(
      ccipRouterAddress,
      cometAddress,
      swapTestnetUsdcAddress,
      overrides || {}
    ) as Promise<CrossChainReceiver>;
  }
  override getDeployTransaction(
    ccipRouterAddress: PromiseOrValue<string>,
    cometAddress: PromiseOrValue<string>,
    swapTestnetUsdcAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      ccipRouterAddress,
      cometAddress,
      swapTestnetUsdcAddress,
      overrides || {}
    );
  }
  override attach(address: string): CrossChainReceiver {
    return super.attach(address) as CrossChainReceiver;
  }
  override connect(signer: Signer): CrossChainReceiver__factory {
    return super.connect(signer) as CrossChainReceiver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrossChainReceiverInterface {
    return new utils.Interface(_abi) as CrossChainReceiverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrossChainReceiver {
    return new Contract(address, _abi, signerOrProvider) as CrossChainReceiver;
  }
}
